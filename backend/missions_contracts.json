{
  "m1": {
    "title": "M1 ‚Äî La Puerta de la Base",
    "roles": [
      "Ventas",
      "Operaciones"
    ],
    "verification_type": "evidence",
    "source": {
      "repository": "default",
      "default_branch": "main",
      "base_path": "students/{slug}"
    },
    "deliverables": [
      {
        "type": "file_exists",
        "path": "docs/m1_vscode_ok.txt",
        "feedback_fail": "No encontr√© tu archivo 'm1_vscode_ok.txt' en la carpeta 'docs'."
      },
      {
        "type": "file_contains",
        "path": "docs/m1_workspace_ok.txt",
        "content": "workspace: C\\MinecraftShop\\minecraft_shop_project",
        "feedback_fail": "El archivo 'm1_workspace_ok.txt' no contiene la l√≠nea exacta requerida."
      },
      {
        "type": "file_exists",
        "path": "docs/m1_notes.md",
        "feedback_fail": "No encontr√© tus notas de investigaci√≥n m1."
      }
    ],
    "display_html": "<section class=\"mission\">\n      <h2>üö™ M1 ‚Äî La Puerta de la Base (VS Code + Python) ‚Äî GitHub-first</h2>\n\n      <!-- 1) HISTORIA -->\n      <h3>üìñ Historia</h3>\n      <p>El Mentor Byte te da dos llaves: <strong>VS Code</strong> (tu cuaderno para escribir instrucciones) y <strong>Python</strong> (quien entiende y ejecuta esas instrucciones). Hoy armamos el taller para toda la aventura. Si el taller queda bien, todo lo dem√°s fluye.</p>\n\n      <!-- 2) PARA QU√â SIRVE -->\n      <h3>üí° ¬øPara qu√© sirve?</h3>\n      <ul>\n        <li>Abrir el proyecto en VS Code y confiarlo (trust).</li>\n        <li>Usar la terminal integrada en la carpeta exacta del proyecto.</li>\n        <li>Ver la versi√≥n de VS Code y de Python.</li>\n        <li>Subir evidencias a GitHub para revisi√≥n y nota.</li>\n      </ul>\n\n      <!-- 3) AL FINAL PODR√ÅS -->\n      <h3>üèÜ Al final podr√°s‚Ä¶</h3>\n      <ul>\n        <li>Confiar la carpeta del proyecto.</li>\n        <li>Abrir la terminal en la ruta correcta.</li>\n        <li>Ver versiones de VS Code y Python.</li>\n        <li>Subir 3 evidencias a GitHub (en tu carpeta de estudiante) y verificar que se sincronizaron.</li>\n      </ul>\n\n      <!-- 4) MATERIAL DE APRENDIZAJE -->\n      <h3>üìö Material de aprendizaje sugerido (videos y docs)</h3>\n      <ul>\n        <li><a href=\"https://www.youtube.com/watch?v=Ei1y51K8jQk\" target=\"_blank\">Curso VS Code desde cero (ES)</a></li>\n        <li><a href=\"https://www.youtube.com/watch?v=fg6dVf-aHqk\" target=\"_blank\">Instalar VS Code en Windows 11 (ES)</a></li>\n        <li><a href=\"https://www.youtube.com/watch?v=kfEpjj2NZxU\" target=\"_blank\">¬øC√≥mo se usa la terminal? CMD/PowerShell para principiantes (ES)</a></li>\n        <li><a href=\"https://www.youtube.com/watch?v=M9YRgYe4FPg\" target=\"_blank\">¬øQu√© es el PATH en Windows? (ES)</a></li>\n        <li><a href=\"https://www.youtube.com/watch?v=eqm_D-vrfPo\" target=\"_blank\">Int√©rprete de Python (explicado) (ES)</a></li>\n        <li>VS Code + Git (ES):\n          <ul>\n            <li><a href=\"https://www.youtube.com/watch?v=C6IjS7jKnjQ\" target=\"_blank\">¬øQue es Github y para que sirve?</a></li>\n            <li><a href=\"https://www.youtube.com/watch?v=AYbgqmyg7dk\" target=\"_blank\">¬øC√≥mo trabajar con Git desde VS Code? (commit, push, ramas)</a></li>\n            <li><a href=\"https://www.youtube.com/watch?v=71ZEL2Mhtp0\" target=\"_blank\">Clonar un repositorio en VS Code</a></li>\n            <li><a href=\"https://www.youtube.com/watch?v=cZHP4tkUDsg\" target=\"_blank\">Pull Request en GitHub (paso a paso)</a></li>\n            <li><a href=\"https://learn.microsoft.com/es-es/azure/developer/javascript/how-to/with-visual-studio-code/clone-github-repository\" target=\"_blank\">Gu√≠a oficial (ES): Clonar un repo con VS Code</a></li>\n            <li><a href=\"https://learn.microsoft.com/es-es/shows/visual-studio-code/using-git-with-visual-studio-code-official-beginner-tutorial\" target=\"_blank\">Tutorial oficial (ES): Git en VS Code</a></li>\n          </ul>\n        </li>\n      </ul>\n\n      <!-- 5) INVESTIGACI√ìN (FICHAS) -->\n      <h3>üìù Investigaci√≥n (Fichas)</h3>\n      <p>Guarda tus 5 fichas en <code>students/&lt;usuario&gt;/docs/m1_notes.md</code> con el formato <strong>Definici√≥n ¬∑ Ejemplo ¬∑ Error com√∫n ¬∑ Fuente</strong>. Los t√©rminos son: <strong>editor</strong>, <strong>VS Code</strong>, <strong>int√©rprete</strong>, <strong>PATH</strong>, <strong>terminal</strong>.</p>\n<pre><code># M1 ‚Äî Fichas\n\n## editor\n- **Definici√≥n:** ...\n- **Ejemplo en este proyecto:** ...\n- **Error com√∫n:** ...\n- **Fuente:** ... (min aprox: ...)\n\n## VS Code\n- **Definici√≥n:** ...\n- **Ejemplo en este proyecto:** ...\n- **Error com√∫n:** ...\n- **Fuente:** ... (min aprox: ...)\n\n## int√©rprete\n- **Definici√≥n:** ...\n- **Ejemplo en este proyecto:** ...\n- **Error com√∫n:** ...\n- **Fuente:** ... (min aprox: ...)\n\n## PATH\n- **Definici√≥n:** ...\n- **Ejemplo en este proyecto:** ...\n- **Error com√∫n:** ...\n- **Fuente:** ... (min aprox: ...)\n\n## terminal\n- **Definici√≥n:** ...\n- **Ejemplo en este proyecto:** ...\n- **Error com√∫n:** ...\n- **Fuente:** ... (min aprox: ...)</code></pre>\n      <p><strong>Ejemplo PATH (completo):</strong> qu√© es, ejemplo con <code>python --version</code> y error t√≠pico de PATH (no se reconoce el comando).</p>\n      <p><strong>Ejemplo terminal (r√°pido):</strong> qu√© es, ejemplo con <code>cd</code> hasta la carpeta del repo y error t√≠pico de ruta.</p>\n\n      <!-- 6) GU√çA DETALLADA (NUEVO) -->\n      <h3>üß≠ Gu√≠a detallada antes de la pr√°ctica</h3>\n      <details open>\n        <summary><strong>Instalaci√≥n y chequeos r√°pidos (Windows/macOS/Linux)</strong></summary>\n        <ul>\n          <li><strong>VS Code</strong> ‚Äî verifica en terminal: <code>code --version</code> (o <code>code -v</code>). Si no funciona en macOS: abre VS Code y ejecuta <em>Command Palette ‚Üí</em> <code>Shell Command: Install 'code' command in PATH</code>.</li>\n          <li><strong>Python</strong> ‚Äî verifica: <code>python --version</code> (o <code>py --version</code> en Windows / <code>python3 --version</code> en macOS/Linux). Si no aparece, instala Python 3.x y en Windows marca <em>‚ÄúAdd python.exe to PATH‚Äù</em>.</li>\n          <li><strong>Ubicaci√≥n del ejecutable</strong> ‚Äî Windows: <code>where python</code> y <code>where code</code>. macOS/Linux: <code>which python3</code>, <code>which code</code>.</li>\n          <li><strong>Terminal integrada VS Code</strong> ‚Äî abre con <kbd>Ctrl</kbd>+<kbd>`</kbd>. Ajusta el shell por defecto si es necesario.</li>\n          <li><strong>Confiar carpeta</strong> ‚Äî al abrir la ra√≠z del proyecto, presiona ‚Äú<em>Yes, I trust the authors</em>‚Äù.</li>\n        </ul>\n      </details>\n\n      <details>\n        <summary><strong>Config b√°sica de Git (primera vez)</strong></summary>\n<pre><code>git --version\n# Identidad\ngit config --global user.name \"Tu Nombre\"\ngit config --global user.email \"tu@correo.com\"\n# Rama por defecto\ngit config --global init.defaultBranch main\n# Fin de l√≠nea (opcional)\n# Windows:\ngit config --global core.autocrlf true\n# macOS/Linux:\n# git config --global core.autocrlf input\n</code></pre>\n        <p>Inicia sesi√≥n en GitHub desde VS Code (icono de cuentas) para facilitar <em>clone/push/PR</em>.</p>\n      </details>\n\n      <!-- 6.1) NUEVO: CLONAR REPOS (VENTAS / OPERACIONES) -->\n      <h3>üì¶ Clonar el repositorio (elige Ventas u Operaciones)</h3>\n      <p>Repos oficiales:</p>\n      <ul>\n        <li><strong>Ventas:</strong> <code>https://github.com/dalarcon80/PortalKidsVentas.git</code></li>\n        <li><strong>Operaciones:</strong> <code>https://github.com/dalarcon80/PortalKidsOperaciones.git</code></li>\n      </ul>\n\n      <details open>\n        <summary><strong>Opci√≥n A (recomendada): Clonar desde VS Code (GUI)</strong></summary>\n        <ol>\n          <li>Abre VS Code ‚Üí <em>Ctrl/Cmd + Shift + P</em> ‚Üí escribe <code>Git: Clone</code> y presiona <em>Enter</em>.</li>\n          <li>Pega la URL del repo que vas a usar:\n            <ul>\n              <li><em>Ventas:</em> <code>https://github.com/dalarcon80/PortalKidsVentas.git</code></li>\n              <li><em>Operaciones:</em> <code>https://github.com/dalarcon80/PortalKidsOperaciones.git</code></li>\n            </ul>\n          </li>\n          <li>Elige una carpeta local de destino (ej.: <code>C:\\MinecraftShop\\</code> o <code>~/MinecraftShop/</code>).</li>\n          <li>Cuando VS Code pregunte ‚Äú¬øDeseas abrir el repositorio clonado?‚Äù, elige <strong>Open</strong> y luego presiona <strong>Yes, I trust the authors</strong>.</li>\n          <li>Abre la terminal integrada (<em>Ctrl + `</em>) y verifica que est√°s en la ra√≠z del repo (ej.: <code>PortalKidsVentas</code> o <code>PortalKidsOperaciones</code>).</li>\n          <li>Crea tu rama de trabajo para M1:\n<pre><code>git checkout -b m1-&lt;usuario&gt;\n</code></pre>\n          </li>\n        </ol>\n        <p><em>Nota (alumno):</em> si el flujo de tu curso exige <strong>Fork ‚Üí Clone</strong>, haz <strong>Fork</strong> en GitHub a tu cuenta y clona <strong>tu fork</strong> (URL quedar√° como <code>https://github.com/&lt;tu-usuario&gt;/PortalKidsVentas.git</code>). Luego a√±ade el remoto <code>upstream</code> al repo original:</p>\n<pre><code># Dentro de tu repo clonado (tu fork)\ngit remote add upstream https://github.com/dalarcon80/PortalKidsVentas.git\n# (o)\ngit remote add upstream https://github.com/dalarcon80/PortalKidsOperaciones.git\ngit remote -v\n</code></pre>\n      </details>\n\n      <details>\n        <summary><strong>Opci√≥n B: Clonar por terminal (PowerShell / bash)</strong></summary>\n        <p><em>Ventas:</em></p>\n<pre><code>git clone https://github.com/dalarcon80/PortalKidsVentas.git\ncd PortalKidsVentas\ngit checkout -b m1-&lt;usuario&gt;\ngit remote -v\n</code></pre>\n        <p><em>Operaciones:</em></p>\n<pre><code>git clone https://github.com/dalarcon80/PortalKidsOperaciones.git\ncd PortalKidsOperaciones\ngit checkout -b m1-&lt;usuario&gt;\ngit remote -v\n</code></pre>\n        <p><em>Consejo:</em> usa rutas simples (sin espacios) para evitar errores. Si trabajas con fork, clona tu fork y configura <code>upstream</code> como se indic√≥.</p>\n      </details>\n\n      <!-- 7) PR√ÅCTICA ‚Äî CONTRATO -->\n      <h3>üöÄ Pr√°ctica ‚Äî Contrato (elige tu perfil)</h3>\n      <p><strong>Paso 0 (todos):</strong> Fork ‚Üí Clone ‚Üí Rama <code>m1-&lt;usuario&gt;</code> ‚Üí Commit/Push/Sync ‚Üí Pull Request.</p>\n      <p><strong>Estructura m√≠nima dentro de <code>students/&lt;usuario&gt;/</code>:</strong></p>\n<pre><code>docs/\nreports/\ndata/bronze\ndata/silver\ndata/gold\ntasks/</code></pre>\n      <p>Agrega un <code>.gitignore</code> para no subir <code>.venv</code>, <code>__pycache__</code> ni <code>.env</code>.</p>\n\n      <details>\n        <summary><strong>Crear estructura por terminal (copiar/pegar)</strong></summary>\n        <p><em>Windows PowerShell</em>:</p>\n<pre><code>mkdir students\\&lt;usuario&gt;\\docs; mkdir students\\&lt;usuario&gt;\\reports; mkdir students\\&lt;usuario&gt;\\tasks\nmkdir students\\&lt;usuario&gt;\\data\\bronze; mkdir students\\&lt;usuario&gt;\\data\\silver; mkdir students\\&lt;usuario&gt;\\data\\gold\n</code></pre>\n        <p><em>macOS/Linux bash</em>:</p>\n<pre><code>mkdir -p students/&lt;usuario&gt;/{docs,reports,tasks}\nmkdir -p students/&lt;usuario&gt;/data/{bronze,silver,gold}\n</code></pre>\n      </details>\n\n      <details>\n        <summary><strong>Generar evidencias por terminal (ahorra tiempo)</strong></summary>\n        <p><em>Windows PowerShell</em>:</p>\n<pre><code>code --version &gt; students\\&lt;usuario&gt;\\docs\\m1_vscode_ok.txt\n$pwdPath = (Get-Location).Path\n\"workspace: $pwdPath\" | Out-File -Encoding utf8 students\\&lt;usuario&gt;\\docs\\m1_workspace_ok.txt\n# Crea el archivo de notas vac√≠o (lo editar√°s t√∫):\nNew-Item -ItemType File students\\&lt;usuario&gt;\\docs\\m1_notes.md -Force | Out-Null\n</code></pre>\n        <p><em>macOS/Linux bash</em>:</p>\n<pre><code>code --version &gt; students/&lt;usuario&gt;/docs/m1_vscode_ok.txt\nprintf \"workspace: %s\\n\" \"$PWD\" &gt; students/&lt;usuario&gt;/docs/m1_workspace_ok.txt\n: &gt; students/&lt;usuario&gt;/docs/m1_notes.md\n</code></pre>\n        <p><em>Consejo:</em> Si el comando <code>code</code> no existe, escribe manualmente el contenido en los archivos desde el editor.</p>\n      </details>\n\n      <!-- 8) SALIDAS POR PERFIL -->\n      <h4>A) Ventas ‚Äî Salidas</h4>\n      <ul>\n        <li><code>students/&lt;u&gt;/docs/m1_vscode_ok.txt</code> (ej.: VS Code version: 1.xx.x)</li>\n        <li><code>students/&lt;u&gt;/docs/m1_workspace_ok.txt</code> con la l√≠nea exacta:<br><code>workspace: C:\\\\MinecraftShop\\\\PortalKidsVentas</code></li>\n        <li><code>students/&lt;u&gt;/docs/m1_notes.md</code> (5 fichas)</li>\n      </ul>\n\n      <h4>B) Operaciones ‚Äî Salidas</h4>\n      <ul>\n        <li><code>students/&lt;u&gt;/docs/m1_vscode_ok.txt</code> (ej.: VS Code version: 1.xx.x)</li>\n        <li><code>students/&lt;u&gt;/docs/m1_workspace_ok.txt</code> con la l√≠nea exacta:<br><code>workspace: C:\\\\MinecraftShop\\\\PortalKidsOperaciones</code></li>\n        <li><code>students/&lt;u&gt;/docs/m1_notes.md</code> (5 fichas)</li>\n      </ul>\n\n      <!-- 9) GIT: COMMIT, PUSH, PR (DETALLADO) -->\n      <h3>üîÅ Git ‚Äî Commit, Push y Pull Request (paso a paso)</h3>\n<pre><code># 1) Crear rama de trabajo\ngit checkout -b m1-&lt;usuario&gt;\n\n# 2) A√±adir solo tus evidencias\ngit add students/&lt;usuario&gt;/docs/m1_vscode_ok.txt \\\n        students/&lt;usuario&gt;/docs/m1_workspace_ok.txt \\\n        students/&lt;usuario&gt;/docs/m1_notes.md\n\n# 3) Commit con mensaje claro\ngit commit -m \"M1: evidencias VS Code, workspace y fichas\"\n\n# 4) Enviar la rama al remoto\ngit push -u origin m1-&lt;usuario&gt;\n\n# 5) Crear Pull Request\n# (desde la UI de GitHub o el panel de Source Control de VS Code)\n</code></pre>\n      <p><strong>Verificaciones √∫tiles:</strong></p>\n<pre><code>git status\ngit branch --show-current\ngit remote -v\ngit log --oneline -n 1\n</code></pre>\n\n      <!-- 10) VERIFICACI√ìN R√ÅPIDA -->\n      <h3>üî¢ Verificaci√≥n r√°pida</h3>\n<pre><code>git status\ngit branch --show-current\ngit log --oneline -n 1\ngit pull\n</code></pre>\n\n      <!-- 11) ENTREGABLES -->\n      <h3>üìã Entregables obligatorios</h3>\n      <ul>\n        <li><code>students/&lt;usuario&gt;/docs/m1_vscode_ok.txt</code></li>\n        <li><code>students/&lt;usuario&gt;/docs/m1_workspace_ok.txt</code></li>\n        <li><code>students/&lt;usuario&gt;/docs/m1_notes.md</code></li>\n      </ul>\n\n      <!-- 12) REVISI√ìN EN PR -->\n      <h3>üëÅ Revisi√≥n en PR</h3>\n      <ul>\n        <li>Terminal en la ruta correcta.</li>\n        <li>Existencia de los 3 archivos con nombres exactos.</li>\n        <li><code>m1_workspace_ok.txt</code> contiene la l√≠nea exacta de tu ruta.</li>\n        <li>Estructura dentro de <code>students/&lt;usuario&gt;/...</code> es correcta.</li>\n        <li>Commit/Sync realizado.</li>\n      </ul>\n\n      <!-- 13) MICROQUIZ -->\n      <h3>üîé Micro-quiz (5)</h3>\n      <ol>\n        <li>¬øPara qu√© sirve el PATH?</li>\n        <li>Editor vs int√©rprete.</li>\n        <li>¬øPara qu√© sirve la terminal integrada?</li>\n        <li>Si <code>code</code> o <code>python</code> no se reconocen, ¬øqu√© falta?</li>\n        <li>¬øPor qu√© hay que confiar (trust) la carpeta?</li>\n      </ol>\n\n      <!-- 14) CHECKLIST -->\n      <h3>‚úÖ Checklist</h3>\n      <ul>\n        <li>[ ] Vi los videos</li>\n        <li>[ ] Fichas en <code>docs/m1_notes.md</code></li>\n        <li>[ ] 3 evidencias subidas (rutas exactas)</li>\n        <li>[ ] Terminal verificada en la carpeta del repo</li>\n        <li>[ ] Commit &amp; Sync verificados (GitHub o <code>git status/log</code>)</li>\n        <li>[ ] Quiz M1 aprobado (evidencia)</li>\n        <li>[ ] SHA final: &lt;aqu√≠&gt;</li>\n      </ul>\n\n      <!-- 15) R√öBRICA -->\n      <h3>üéì R√∫brica (10)</h3>\n      <ul>\n        <li>Fichas (3)</li>\n        <li>Pr√°ctica (4)</li>\n        <li>Evidencias (2)</li>\n        <li>Orden (1)</li>\n      </ul>\n\n      <!-- 16) ERRORES COMUNES -->\n      <h3>‚ö†Ô∏è Errores comunes</h3>\n      <ul>\n        <li>Commit sin Push/Sync.</li>\n        <li>Terminal abierta en otra ruta.</li>\n        <li>VS Code o Python fuera de PATH.</li>\n        <li>Subir <code>.venv</code> u otras carpetas no permitidas.</li>\n        <li><em>El comando</em> <code>code</code> <em>no funciona</em> ‚Üí instala el comando en PATH (macOS) o reinstala VS Code marcando ‚ÄúAdd to PATH‚Äù.</li>\n      </ul>\n    </section>\n\n    <section class=\"verification\">\n      <button id=\"verifyBtn\">Verificar y Entregar Misi√≥n</button>\n      <div id=\"verifyResult\"></div>\n    </section>"
  },
  "m2": {
    "title": "M2 ‚Äî Despierta a tu Aliado",
    "roles": [
      "Ventas",
      "Operaciones"
    ],
    "verification_type": "evidence",
    "source": {
      "repository": "default",
      "default_branch": "main",
      "base_path": "students/{slug}"
    },
    "deliverables": [
      {
        "type": "file_exists",
        "path": "docs/m2_python_version.txt",
        "feedback_fail": "No encontr√© tu archivo 'm2_python_version.txt'."
      },
      {
        "type": "file_contains",
        "path": "docs/m2_python_version.txt",
        "content": "Python",
        "feedback_fail": "El archivo 'm2_python_version.txt' no contiene la palabra 'Python'."
      },
      {
        "type": "file_exists",
        "path": "docs/m2_hello.txt",
        "feedback_fail": "No encontr√© tu archivo 'm2_hello.txt'."
      },
      {
        "type": "file_exists",
        "path": "docs/m2_notes.md",
        "feedback_fail": "No encontr√© tus notas de investigaci√≥n m2."
      }
    ],
    "display_html": "<section class=\"mission\">\n      <h2>¬°Bienvenido a la Misi√≥n 2!</h2>\n      <p>Esta misi√≥n te ayudar√° a crear un entorno virtual seguro para tus proyectos de Python utilizando <code>venv</code>. Aprende a aislar tus dependencias, configurar tu entorno en VS Code, y dejar todo listo para instalar paquetes como pandas sin da√±ar tu sistema global.</p>\n\n      <h3>üìö Historia</h3>\n      <p>Byte te muestra un armario lleno de frascos etiquetados \"Python\". Cada frasco es distinto, aunque parezca igual. Tu misi√≥n es preparar un espacio (tu <code>.venv</code>) donde tu frasco funcione sin interferir con los dem√°s.</p>\n\n      <h3>üí° ¬øPara qu√© sirve?</h3>\n      <ul>\n        <li>Mantener tus paquetes separados de otros proyectos.</li>\n        <li>Evitar conflictos entre versiones de librer√≠as.</li>\n        <li>Hacer que VS Code use tu entorno personalizado.</li>\n      </ul>\n\n      <h3>üèÜ Objetivos de esta misi√≥n</h3>\n      <ul>\n        <li>Crear y activar tu entorno virtual (<code>.venv</code>).</li>\n        <li>Configurar VS Code para que use ese entorno.</li>\n        <li>Registrar y guardar tus evidencias.</li>\n        <li>Hacer commit y sincronizar tu trabajo con GitHub.</li>\n      </ul>\n\n      <h3>üìï Material recomendado</h3>\n      <ul>\n        <li><a href=\"https://www.youtube.com/watch?v=MmUKJqjPiHo\" target=\"_blank\">Crear y activar venv en Windows</a></li>\n        <li><a href=\"https://www.youtube.com/watch?v=XTmS37AxM3Q\" target=\"_blank\">Soluci√≥n al error de ejecuci√≥n de scripts en PowerShell</a></li>\n        <li><a href=\"https://www.youtube.com/watch?v=eFThEXvuZaM\" target=\"_blank\">Seleccionar int√©rprete en VS Code</a></li>\n        <li><a href=\"https://docs.python.org/es/3/library/venv.html\" target=\"_blank\">Documentaci√≥n oficial de venv</a></li>\n      </ul>\n\n      <h3>üìù Investigaci√≥n: Fichas de conceptos clave</h3>\n      <p>Debes crear 4 fichas en <code>students/&lt;usuario&gt;/docs/m2_notes.md</code> con el siguiente formato:</p>\n<pre><code>## &lt;t√©rmino&gt;\n- **Definici√≥n:** Breve y clara (1‚Äì2 l√≠neas).\n- **Ejemplo en este proyecto:** C√≥mo se us√≥ aqu√≠ (1 l√≠nea).\n- **Error com√∫n:** Algo que puede salir mal (1 l√≠nea).\n- **Fuente:** T√≠tulo + link + minuto del video.</code></pre>\n      <p><strong>T√©rminos:</strong> <code>venv</code>, <code>pip</code>, <code>Int√©rprete en VS Code</code>, <code>ExecutionPolicy</code>.</p>\n\n      <h3>üîß Pr√°ctica paso a paso</h3>\n      <p><strong>Terminal abierta en la ra√≠z del repositorio. Rama:</strong> <code>m2-&lt;usuario&gt;</code></p>\n      <ol>\n        <li>Crear entorno virtual: <code>py -m venv .venv</code></li>\n        <li>Activar entorno: <code>.\\.venv\\Scripts\\Activate.ps1</code></li>\n        <li>Si hay error de permisos: ejecutar <code>Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy RemoteSigned</code></li>\n        <li>Verificar Python: <code>python --version</code> (guarda salida)</li>\n        <li>Seleccionar int√©rprete en VS Code: <code>Ctrl+Shift+P ‚Üí Python: Select Interpreter</code></li>\n        <li>Crear archivo <code>hello.py</code> y ejecutarlo, guardar salida.</li>\n      </ol>\n\n      <h3>üìÑ Evidencias</h3>\n      <ul>\n        <li><code>students/&lt;usuario&gt;/docs/m2_python_version.txt</code></li>\n        <li><code>students/&lt;usuario&gt;/docs/m2_hello.txt</code></li>\n        <li><code>students/&lt;usuario&gt;/docs/m2_notes.md</code> (4 fichas)</li>\n      </ul>\n\n      <h3>üíæ Commit & Sync</h3>\n      <ul>\n        <li>Haz commit y push desde VS Code o terminal.</li>\n        <li>Verifica en GitHub o usa:\n          <ul>\n            <li><code>git status</code></li>\n            <li><code>git branch --show-current</code></li>\n            <li><code>git log --oneline -n 1</code></li>\n          </ul>\n        </li>\n      </ul>\n\n      <h3>üìë Checklist final</h3>\n      <ul>\n        <li>[ ] Fichas completas y subidas</li>\n        <li>[ ] venv creado y activo</li>\n        <li>[ ] VS Code usando el int√©rprete correcto</li>\n        <li>[ ] Archivos de evidencia presentes</li>\n        <li>[ ] Push hecho y confirmado</li>\n        <li>[ ] Quiz completado</li>\n      </ul>\n\n      <h3>üî¨ Verificaci√≥n del profe</h3>\n      <ul>\n        <li>Revisa si venv est√° activo.</li>\n        <li>Comprueba que seleccionaste el int√©rprete correcto.</li>\n        <li>Valida las rutas y nombres de archivos.</li>\n        <li>Confirmaci√≥n de push.</li>\n      </ul>\n\n      <h3>üìö Microquiz</h3>\n      <ol>\n        <li>¬øQu√© es y para qu√© sirve <code>.venv</code>?</li>\n        <li>¬øC√≥mo sabes que est√° activo?</li>\n        <li>¬øQu√© pasa si <code>pip</code> se usa fuera del venv?</li>\n        <li>¬øQu√© herramienta usas en VS Code para elegir el int√©rprete?</li>\n        <li>¬øQu√© comando usas si no puedes activar el venv?</li>\n      </ol>\n\n      <h3>üëç R√∫brica (m√°ximo 10 puntos)</h3>\n      <ul>\n        <li>Fichas: 3 pts</li>\n        <li>Pr√°ctica: 4 pts</li>\n        <li>Evidencias: 2 pts</li>\n        <li>Orden y entrega: 1 pt</li>\n      </ul>\n\n      <h3>üö´ Errores comunes</h3>\n      <ul>\n        <li>No activar bien el venv ‚Üí usar <code>Activate.ps1</code></li>\n        <li>VS Code no muestra el entorno ‚Üí verificar selecci√≥n</li>\n        <li>Error de permisos en PowerShell ‚Üí ejecutar <code>Set-ExecutionPolicy</code></li>\n      </ul>\n    </section>\n\n    <section class=\"verification\">\n      <button id=\"verifyBtn\">Verificar y Entregar Misi√≥n</button>\n      <div id=\"verifyResult\"></div>\n    </section>"
  },
  "m3": {
    "title": "M3 ‚Äî Cofres CSV y DataFrames",
    "roles": [
      "Ventas",
      "Operaciones"
    ],
    "verification_type": "script_output",
    "source": {
      "repository": "default",
      "default_branch": "main",
      "base_path": "students/{slug}"
    },
    "script_path": "scripts/m3_explorer.py",
    "validations": [
      {
        "type": "output_contains",
        "text": "Shape: ",
        "feedback_fail": "La salida de tu script no muestra el 'shape' correcto de los datos."
      },
      {
        "type": "output_contains",
        "text": "Columns:",
        "feedback_fail": "La lista de columnas en la salida de tu script no es la esperada."
      }
    ],
    "display_html": "<section class=\"mission\">\n      <h2>Historia</h2>\n      <p>El pasillo conduce a una bodega con cofres etiquetados: orders, products, customers. ‚ÄúEstos cofres son CSV‚Äù, explica Byte. ‚ÄúParecen listas, pero esconden tablas. Para leerlos sin perdernos, usaremos una lupa especial: pandas. Con pandas, los cofres se transforman en DataFrames.‚Äù</p>\n      <p>Byte coloca cuatro tarjetas: head, shape, dtypes, columns. ‚ÄúSon tus cuatro sentidos para reconocer un DataFrame. head te muestra el comienzo; shape te dice cu√°ntas filas y columnas hay; dtypes revela los tipos; columns te presenta cada campo por su nombre. Si dominas estos cuatro, sabr√°s qu√© tienes delante antes de tocarlo.‚Äù</p>\n      <h2>¬øPara qu√© sirve?</h2>\n      <p>Cargar y entender datos r√°pidamente: validar columnas, tipos, tama√±o y primeras filas para detectar problemas temprano.</p>\n      <h2>Al final podr√°s‚Ä¶</h2>\n      <ul>\n        <li>Escribir un programa que lea un CSV real.</li>\n        <li>Imprimir n√∫mero de columnas, nombres, head(5), shape y dtypes.</li>\n        <li>Guardar notas y un resumen t√©cnico en docs.</li>\n      </ul>\n      <h2>Videos</h2>\n      <ul>\n        <li><a href=\"https://www.youtube.com/watch?v=WkVpnTgAQLU\" target=\"_blank\">Leer y escribir CSV con pandas</a></li>\n        <li><a href=\"https://www.youtube.com/watch?v=sKQW-oIneFM\" target=\"_blank\">Leer CSV con pandas (r√°pido)</a></li>\n        <li><a href=\"https://www.youtube.com/watch?v=w7fNwreUsIk\" target=\"_blank\">¬øQu√© es una librer√≠a en Python?</a></li>\n        <li><a href=\"https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.shape.html\" target=\"_blank\">DataFrame.shape (referencia oficial)</a></li>\n      </ul>\n      <h2>Investigaci√≥n ‚Äî Fichas</h2>\n      <p>Completa 4 fichas: librer√≠a, pip, pandas, DataFrame. Para cada ficha incluye:</p>\n      <ul>\n        <li>Definici√≥n</li>\n        <li>Ejemplo en este proyecto (¬øqu√© har√°s con ello hoy?)</li>\n        <li>Error com√∫n</li>\n        <li>Fuente vista</li>\n      </ul>\n      <p>Adem√°s, a√±ade un mini‚Äëmapa: para qu√© sirve cada propiedad head/shape/dtypes/columns.</p>\n      <h2>Pr√°ctica ‚Äî Contrato</h2>\n      <p><strong>Entrada:</strong> C:\\\\MinecraftShop\\\\minecraft_shop_project\\\\sources\\\\orders_seed.csv.</p>\n      <p><strong>Logro:</strong> programa que lee el CSV (si falla por codificaci√≥n, reintenta con otra) y muestra/guarda lo pedido.</p>\n      <p><strong>Salidas:</strong></p>\n      <ul>\n        <li><code>docs/m3_csv_notes.md</code> (lista de columnas + 1 duda)</li>\n        <li><code>docs/m3_practice_output.txt</code> (resumen con head/shape/dtypes/columns y valores)</li>\n      </ul>\n      <h2>Parte aplicada (detallada)</h2>\n      <p><strong>Situaci√≥n:</strong> en M4 necesitar√°s una preview (3 filas) antes de copiar a Bronze.</p>\n      <p><strong>Qu√© debes hacer hoy:</strong></p>\n      <ul>\n        <li>Deja tu programa parametrizable por ruta (que puedas cambiar el archivo sin alterar la l√≥gica).</li>\n        <li>Asegura que si no existe el archivo o hay error de codificaci√≥n, el programa explique el problema con un mensaje claro (no stacktrace crudo).</li>\n        <li>Anota en tus notas c√≥mo probar√°s tu programa con otro CSV del proyecto (si existiera).</li>\n      </ul>\n      <p><strong>Meta de calidad:</strong> tu programa sirve como visor reutilizable.</p>\n      <h2>Entregables</h2>\n      <p>m3_csv_notes.md, m3_practice_output.txt, scripts/m3_explorer.py</p>\n      <h2>Verificaci√≥n</h2>\n      <p>El script existe y la salida contiene shape y columnas.</p>\n      <h2>Micro‚Äëquiz (5)</h2>\n      <ol>\n        <li>¬øQu√© es una librer√≠a?</li>\n        <li>¬øC√≥mo se lee un CSV en pandas?</li>\n        <li>¬øPara qu√© sirve DataFrame.head()?</li>\n        <li>¬øQu√© informaci√≥n da DataFrame.shape?</li>\n        <li>¬øC√≥mo verificas los tipos de columna?</li>\n      </ol>\n      <h2>Checklist</h2>\n      <ul>\n        <li>Videos vistos</li>\n        <li>Fichas completadas</li>\n        <li>Script creado y probado</li>\n        <li>Notas documentadas</li>\n      </ul>\n      <h2>R√∫brica (10)</h2>\n      <ul>\n        <li>Fichas (3)</li>\n        <li>Pr√°ctica (4)</li>\n        <li>Evidencias (2)</li>\n        <li>Orden (1)</li>\n      </ul>\n      <h2>Errores comunes</h2>\n      <ul>\n        <li>No manejar errores de codificaci√≥n</li>\n        <li>No revisar shape antes de procesar</li>\n      </ul>\n    </section>\n    <section class=\"verification\">\n      <button id=\"verifyBtn\">Verificar y Entregar Misi√≥n</button>\n      <div id=\"verifyResult\"></div>\n    </section>"
  },
  "m4": {
    "title": "M4 ‚Äî Bronze",
    "roles": [
      "Ventas",
      "Operaciones"
    ],
    "verification_type": "evidence",
    "source": {
      "repository": "default",
      "default_branch": "main",
      "base_path": "students/{slug}"
    },
    "deliverables": [
      {
        "type": "file_exists",
        "path": "reports/m4_preview.txt",
        "feedback_fail": "No encontr√© el archivo de preview de Bronze (m4_preview.txt)."
      },
      {
        "type": "file_exists",
        "path": "reports/m4_verify.txt",
        "feedback_fail": "No encontr√© tu archivo de verificaci√≥n m4 (m4_verify.txt)."
      }
    ],
    "display_html": "<section class=\"mission\">\n      <h2>Historia</h2>\n      <p>El pasillo conduce a la C√°mara Bronze, un cuarto fr√≠o con estantes alineados. ‚ÄúAqu√≠ no se toca nada‚Äù, advierte Byte. ‚ÄúBronze es la foto exacta de lo que lleg√≥. Si cambias una may√∫scula, ya no es la misma foto.‚Äù</p>\n      <p>‚ÄúAntes de guardar, haz una preview de 3 filas para estar seguro de lo que copiar√°s. Despu√©s, mueve el archivo tal cual seg√∫n tu rol y, por √∫ltimo, verifica: cuenta filas y columnas en el origen y en Bronze. Si son iguales, la puerta siguiente se abrir√° sin ruidos.‚Äù</p>\n      <h2>¬øPara qu√© sirve?</h2>\n      <p>Contar con una copia confiable del origen: sin transformar, con preview y verificaci√≥n objetiva.</p>\n      <h2>Al final podr√°s‚Ä¶</h2>\n      <ul>\n        <li>Generar una preview (3 filas).</li>\n        <li>Copiar sin transformar a <code>data/bronze/</code>.</li>\n        <li>Verificar igualdad de filas y columnas (origen vs Bronze).</li>\n      </ul>\n      <h2>Videos</h2>\n      <ul>\n        <li><a href=\"https://www.youtube.com/watch?v=qFWSAGtD8VQ\" target=\"_blank\">Arquitectura Medallion (Bronce/Plata/Oro) ‚Äî explicaci√≥n</a></li>\n        <li><a href=\"https://www.youtube.com/watch?v=mMWhzpGeiKY\" target=\"_blank\">Arquitectura de Datos Moderna (Bronce/Plata/Oro)</a></li>\n        <li><a href=\"https://www.ibm.com/mx-es/think/topics/data-ingestion\" target=\"_blank\">¬øQu√© es la ingesta de datos? (IBM)</a></li>\n      </ul>\n      <h2>Investigaci√≥n ‚Äî Fichas</h2>\n      <p>Completa 3 fichas: ingesta, copia fiel, preview. Para cada ficha incluye:</p>\n      <ul>\n        <li>Definici√≥n</li>\n        <li>Ejemplo en este proyecto (qu√© vas a copiar)</li>\n        <li>Error com√∫n (por ejemplo, transformar en Bronze)</li>\n        <li>Fuente vista</li>\n      </ul>\n      <h2>Pr√°ctica ‚Äî Contrato</h2>\n      <p><strong>Entrada:</strong> sources/orders_seed.csv.</p>\n      <p><strong>Logro:</strong></p>\n      <ul>\n        <li><code>reports/m4_preview.txt</code> (3 filas con nombres)</li>\n        <li>Copia fiel a: Ventas ‚Üí <code>data/bronze/orders_ventas.csv</code> ¬∑ Operaciones ‚Üí <code>data/bronze/orders_ops.csv</code></li>\n        <li><code>reports/m4_verify.txt</code> con src_rows/dest_rows/rows_equal y src_cols/dest_cols/cols_equal</li>\n      </ul>\n      <h2>Parte aplicada (detallada)</h2>\n      <p><strong>Situaci√≥n:</strong> Bronze es el punto de verdad del proyecto; cualquier error aqu√≠ se arrastra a Silver y Gold.</p>\n      <p><strong>Qu√© debes hacer:</strong></p>\n      <ul>\n        <li>Compara manualmente (adem√°s del archivo de verificaci√≥n) que los encabezados del destino sean id√©nticos a los del origen (orden y escritura).</li>\n        <li>Repite el proceso si detectas diferencias: la copia debe ser exacta (sin cambios de may√∫sculas, separadores ni tipos).</li>\n        <li>Documenta en <code>m4_notes.md</code> si encontraste inconsistencias (1‚Äì2 l√≠neas) y c√≥mo las resolviste.</li>\n      </ul>\n      <p><strong>Criterio de aceptaci√≥n:</strong> rows_equal=True y cols_equal=True + archivos no vac√≠os.</p>\n      <h2>Entregables</h2>\n      <p>reports/m4_preview.txt, orders_[rol].csv en data/bronze, reports/m4_verify.txt, m4_notes.md.</p>\n      <h2>Verificaci√≥n</h2>\n      <p>Archivos de preview y verificaci√≥n existen.</p>\n      <h2>Micro‚Äëquiz (5)</h2>\n      <ol>\n        <li>¬øQu√© es Bronze en la arquitectura de datos?</li>\n        <li>¬øPor qu√© no se transforma la informaci√≥n en Bronze?</li>\n        <li>¬øQu√© significa copia fiel?</li>\n        <li>¬øPor qu√© es importante la preview antes de copiar?</li>\n        <li>¬øC√≥mo verificas que la copia es exacta?</li>\n      </ol>\n      <h2>Checklist</h2>\n      <ul>\n        <li>Videos vistos</li>\n        <li>Fichas completadas</li>\n        <li>Preview generada</li>\n        <li>Archivo copiado correctamente</li>\n        <li>Verificaci√≥n realizada</li>\n      </ul>\n      <h2>R√∫brica (10)</h2>\n      <ul>\n        <li>Fichas (3)</li>\n        <li>Pr√°ctica (4)</li>\n        <li>Evidencias (2)</li>\n        <li>Orden (1)</li>\n      </ul>\n      <h2>Errores comunes</h2>\n      <ul>\n        <li>Modificar el archivo al copiar</li>\n        <li>Olvidar la verificaci√≥n de filas y columnas</li>\n      </ul>\n    </section>\n    <section class=\"verification\">\n      <button id=\"verifyBtn\">Verificar y Entregar Misi√≥n</button>\n      <div id=\"verifyResult\"></div>\n    </section>"
  },
  "m5": {
    "title": "M5 ‚Äî Silver",
    "roles": [
      "Ventas",
      "Operaciones"
    ],
    "verification_type": "llm_evaluation",
    "source": {
      "repository": "default",
      "default_branch": "main",
      "base_path": "students/{slug}"
    },
    "deliverable_path": "docs/m5_notes.md",
    "expected_keywords": [
      "limpieza",
      "tipos",
      "duplicados"
    ],
    "feedback_fail": "La evaluaci√≥n autom√°tica de tus notas indica que necesitan m√°s detalle o claridad en limpieza, tipos y duplicados.",
    "display_html": "<section class=\"mission\">\n      <h2>Historia</h2>\n      <p>La siguiente puerta se abre a un taller plateado. ‚ÄúSilver es donde quitamos lo que estorba‚Äù, dice Byte. ‚ÄúRecortamos espacios, corregimos tipos y eliminamos duplicados. No adornamos los datos: los dejamos confiables para unir en Gold.‚Äù</p>\n      <h2>¬øPara qu√© sirve?</h2>\n      <p>Dejar los datos consistentes: texto limpio, tipos correctos, sin registros repetidos.</p>\n      <h2>Al final podr√°s‚Ä¶</h2>\n      <ul>\n        <li>Escribir un programa que limpie textos y convierta tipos.</li>\n        <li>Contar y eliminar duplicados con criterio.</li>\n        <li>Guardar CSV limpios y un resumen de cambios.</li>\n      </ul>\n      <h2>Videos</h2>\n      <ul>\n        <li><a href=\"https://www.youtube.com/watch?v=8tuyYql2duA\" target=\"_blank\">M√©todo strip() (limpieza de espacios)</a></li>\n        <li><a href=\"https://www.youtube.com/watch?v=BNLhP_r8pxU\" target=\"_blank\">to_datetime (convertir a fecha)</a></li>\n        <li><a href=\"https://www.youtube.com/watch?v=BP_vv_NI-LM\" target=\"_blank\">Eliminar duplicados (drop_duplicates)</a></li>\n        <li><a href=\"https://www.youtube.com/watch?v=1HhV0JZs4qY\" target=\"_blank\">Regex para limpiar ‚Äúbasura‚Äù (opcional)</a></li>\n      </ul>\n      <h2>Investigaci√≥n ‚Äî Fichas</h2>\n      <p>Completa 3 fichas: limpieza de texto, conversiones de tipos (quantity‚Üíint, order_date‚Üídatetime), duplicados (criterio). Para cada ficha incluye:</p>\n      <ul>\n        <li>Definici√≥n</li>\n        <li>Ejemplo en este proyecto (qu√© columna limpiar√°s/convertir√°s)</li>\n        <li>Error com√∫n (por ejemplo, perder datos por conversi√≥n)</li>\n        <li>Fuente vista</li>\n      </ul>\n      <h2>Pr√°ctica ‚Äî Contrato</h2>\n      <p><strong>Entrada:</strong> Bronze (o sources/ si no existe Bronze).</p>\n      <p><strong>Logro:</strong></p>\n      <ul>\n        <li>Cargar orders_[ventas|ops].csv (m√°s opcionalmente products_seed.csv, customers_seed.csv)</li>\n        <li>Aplicar strip, convertir tipos, contar y eliminar duplicados (explica el criterio)</li>\n        <li>Guardar por rol en data/silver/ (hasta 3 CSV)</li>\n        <li>Escribir <code>reports/m5_limpieza_resumen.txt</code> (‚â•2 reglas aplicadas + # duplicados)</li>\n      </ul>\n      <h2>Parte aplicada (detallada)</h2>\n      <p><strong>Situaci√≥n:</strong> Gold depender√° de que tipos y textos est√©n correctos.</p>\n      <p><strong>Qu√© debes hacer:</strong></p>\n      <ul>\n        <li>Justifica en el resumen por qu√© hiciste cada conversi√≥n (por ejemplo, para poder sumar quantity o ordenar por order_date).</li>\n        <li>Si alguna fecha no parse√≥, d√©jala como NaT y cuenta cu√°ntas quedaron as√≠; an√≥talo.</li>\n        <li>Si eliminas duplicados, explica el criterio (duplicado completo o por columnas clave) y cu√°ntos quitaste.</li>\n      </ul>\n      <p><strong>Criterio de aceptaci√≥n:</strong> CSV con encabezados correctos, tipos adecuados y resumen cuantificado.</p>\n      <h2>Entregables</h2>\n      <p>CSV limpios en data/silver, reports/m5_limpieza_resumen.txt, docs/m5_notes.md.</p>\n      <h2>Verificaci√≥n</h2>\n      <p>Notas contienen keywords de limpieza, tipos y duplicados.</p>\n      <h2>Micro‚Äëquiz (5)</h2>\n      <ol>\n        <li>¬øQu√© hace el m√©todo strip()?</li>\n        <li>¬øPor qu√© convertir quantity a int?</li>\n        <li>¬øC√≥mo convertir una columna a fecha en pandas?</li>\n        <li>¬øQu√© criterios usar para eliminar duplicados?</li>\n        <li>¬øQu√© pasa si no limpias textos antes de unir datos?</li>\n      </ol>\n      <h2>Checklist</h2>\n      <ul>\n        <li>Videos vistos</li>\n        <li>Fichas completadas</li>\n        <li>Programa de limpieza creado</li>\n        <li>CSV limpios generados</li>\n        <li>Resumen escrito</li>\n      </ul>\n      <h2>R√∫brica (10)</h2>\n      <ul>\n        <li>Fichas (3)</li>\n        <li>Pr√°ctica (4)</li>\n        <li>Evidencias (2)</li>\n        <li>Orden (1)</li>\n      </ul>\n      <h2>Errores comunes</h2>\n      <ul>\n        <li>No aplicar strip y dejar espacios al unir datos</li>\n        <li>Conversi√≥n de tipos fallida que provoca NaNs</li>\n        <li>Eliminar duplicados sin definir criterio claro</li>\n      </ul>\n    </section>\n    <section class=\"verification\">\n      <button id=\"verifyBtn\">Verificar y Entregar Misi√≥n</button>\n      <div id=\"verifyResult\"></div>\n    </section>"
  },
  "m6v": {
    "title": "M6 Ventas ‚Äî Sal√≥n del Mercado",
    "roles": [
      "Ventas"
    ],
    "verification_type": "evidence",
    "source": {
      "repository": "ventas",
      "default_branch": "main",
      "base_path": "students/{slug}"
    },
    "deliverables": [
      {
        "type": "file_exists",
        "path": "data/gold/ventas_por_dia.csv",
        "feedback_fail": "No encontr√© tu archivo 'ventas_por_dia.csv' en data/gold."
      },
      {
        "type": "file_exists",
        "path": "data/gold/top_productos.csv",
        "feedback_fail": "No encontr√© tu archivo 'top_productos.csv' en data/gold."
      },
      {
        "type": "file_exists",
        "path": "data/gold/ventas_por_ciudad.csv",
        "feedback_fail": "No encontr√© tu archivo 'ventas_por_ciudad.csv' en data/gold."
      }
    ],
    "display_html": "<section class=\"mission\">\n      <h2>Historia</h2>\n      <p>Llegan al Sal√≥n del Mercado. Tres caminos desembocan en una mesa de uni√≥n: pedidos, productos y clientes. ‚ÄúEl consejo no quiere an√©cdotas; quiere medidas‚Äù, dice Byte. ‚ÄúEn Gold (Ventas) unir√°s con joins left para no perder pedidos. Crear√°s la runa clave: ingreso = quantity √ó price. Luego generar√°s ventas por d√≠a, top productos y ventas por ciudad. Si un nombre de producto o una ciudad aparece vac√≠o, la historia est√° incompleta: revisa claves y tipo de join.‚Äù</p>\n      <h2>¬øPara qu√© sirve?</h2>\n      <p>Integrar tablas para calcular ingreso y generar m√©tricas √∫tiles.</p>\n      <h2>Al final podr√°s‚Ä¶</h2>\n      <ul>\n        <li>Hacer joins left con claves correctas.</li>\n        <li>Crear ingreso = quantity * price.</li>\n        <li>Generar 3 m√©tricas y documentar el modelo.</li>\n      </ul>\n      <h2>Videos</h2>\n      <ul>\n        <li><a href=\"https://www.youtube.com/watch?v=mEmNiPoqKAo\" target=\"_blank\">merge (joins) en pandas</a></li>\n        <li><a href=\"https://www.youtube.com/watch?v=THh7H3ZsSbE\" target=\"_blank\">groupby (sum, count, ordenar)</a></li>\n        <li><a href=\"https://www.youtube.com/watch?v=vFn1y47SXRU\" target=\"_blank\">PK/FK (llave primaria y for√°nea)</a></li>\n        <li><a href=\"https://pandas.pydata.org/docs/reference/api/pandas.merge.html\" target=\"_blank\">pandas.merge (oficial)</a></li>\n      </ul>\n      <h2>Investigaci√≥n ‚Äî Fichas</h2>\n      <p>Completa 4 fichas: PK/FK, merge left on, groupby, ingreso. Para cada ficha incluye: definici√≥n, ejemplo en este proyecto, error com√∫n, fuente vista. Adem√°s, redacta tu plan (6‚Äì8 l√≠neas): orden de uniones, columna ingreso, m√©tricas y archivos.</p>\n      <h2>Pr√°ctica ‚Äî Contrato</h2>\n      <p><strong>Entrada:</strong> (Silver Ventas): orders_v_clean.csv, products_v_clean.csv, customers_v_clean.csv.</p>\n      <p><strong>Logro:</strong> en <code>data/gold/</code>:</p>\n      <ul>\n        <li><code>ventas_por_dia.csv</code> (por order_date: total_items, total_pedidos, total_ingreso)</li>\n        <li><code>top_productos.csv</code> (por product_id/product_name: total_items, total_ingreso, ranking desc)</li>\n        <li><code>ventas_por_ciudad.csv</code> (por city: total_items, total_pedidos, total_ingreso)</li>\n        <li><code>v_model.json</code> (fuentes, joins, m√©tricas, f√≥rmula)</li>\n      </ul>\n      <h2>Parte aplicada (detallada)</h2>\n      <p><strong>Situaci√≥n:</strong> el Consejo pedir√° las 3 vistas para evaluar decisiones.</p>\n      <p><strong>Qu√© debes hacer:</strong></p>\n      <ul>\n        <li>Verifica que los joins sean left (no pierdas pedidos) y que los campos clave (product_id, customer_id) coincidan en nombre y tipo.</li>\n        <li>Valida ingreso en una muestra (toma 2‚Äì3 filas y calcula a mano).</li>\n        <li>Ordena correctamente (por fecha en ventas por d√≠a; por ingreso desc en top productos).</li>\n        <li>Revisa nulos en product_name o city; si los hay, ajusta el plan de uniones y documenta la causa y soluci√≥n (2‚Äì3 l√≠neas).</li>\n      </ul>\n      <p><strong>Criterio de aceptaci√≥n:</strong> m√©tricas coherentes, ranking correcto, <code>v_model.json</code> claro.</p>\n      <h2>Entregables</h2>\n      <p>ventas_por_dia.csv, top_productos.csv, ventas_por_ciudad.csv, v_model.json, docs/m6_ventas_notes.md.</p>\n      <h2>Verificaci√≥n</h2>\n      <p>Archivos de ventas por d√≠a, top productos y ventas por ciudad existen.</p>\n      <h2>Micro‚Äëquiz (5)</h2>\n      <ol>\n        <li>¬øQu√© es un join left?</li>\n        <li>¬øC√≥mo calculas el ingreso?</li>\n        <li>¬øPara qu√© sirve groupby?</li>\n        <li>¬øQu√© es una clave primaria y for√°nea?</li>\n        <li>¬øPor qu√© ordenar por ingreso descendente en top productos?</li>\n      </ol>\n      <h2>Checklist</h2>\n      <ul>\n        <li>Videos vistos</li>\n        <li>Fichas completadas</li>\n        <li>Plan redactado</li>\n        <li>Archivos generados</li>\n      </ul>\n      <h2>R√∫brica (10)</h2>\n      <ul>\n        <li>Fichas (3)</li>\n        <li>Pr√°ctica (4)</li>\n        <li>Evidencias (2)</li>\n        <li>Orden (1)</li>\n      </ul>\n      <h2>Errores comunes</h2>\n      <ul>\n        <li>Usar join inner y perder pedidos</li>\n        <li>No validar el c√°lculo de ingreso</li>\n        <li>No ordenar correctamente los rankings</li>\n      </ul>\n    </section>\n    <section class=\"verification\">\n      <button id=\"verifyBtn\">Verificar y Entregar Misi√≥n</button>\n      <div id=\"verifyResult\"></div>\n    </section>"
  },
  "m6o": {
    "title": "M6 Operaciones ‚Äî Estaci√≥n Log√≠stica",
    "roles": [
      "Operaciones"
    ],
    "verification_type": "evidence",
    "source": {
      "repository": "operaciones",
      "default_branch": "main",
      "base_path": "students/{slug}"
    },
    "deliverables": [
      {
        "type": "file_exists",
        "path": "data/gold/envios_por_ciudad.csv",
        "feedback_fail": "No encontr√© tu archivo 'envios_por_ciudad.csv' en data/gold."
      },
      {
        "type": "file_exists",
        "path": "data/gold/envios_por_dia.csv",
        "feedback_fail": "No encontr√© tu archivo 'envios_por_dia.csv' en data/gold."
      },
      {
        "type": "file_exists",
        "path": "data/gold/backlog_por_dia.csv",
        "feedback_fail": "No encontr√© tu archivo 'backlog_por_dia.csv' en data/gold."
      }
    ],
    "display_html": "<section class=\"mission\">\n      <h2>Historia</h2>\n      <p>En la Estaci√≥n Log√≠stica, tableros muestran rutas y paquetes. ‚ÄúPara cumplir promesas‚Äù, dice Byte, ‚Äúnecesitamos visibilidad: unir pedidos con clientes para saber en qu√© ciudad est√° cada env√≠o.‚Äù</p>\n      <p>‚ÄúCrearemos dos banderas: enviado (1 si shipped=True) y pendiente (1 si shipped=False). Con eso mediremos env√≠os por ciudad, por d√≠a y el backlog diario (acumulado de pendientes). Si city aparece vac√≠a, la br√∫jula est√° rota: revisa el join.‚Äù</p>\n      <h2>¬øPara qu√© sirve?</h2>\n      <p>Controlar env√≠os por ciudad y d√≠a, y entender el backlog para priorizar acciones.</p>\n      <h2>Al final podr√°s‚Ä¶</h2>\n      <ul>\n        <li>Hacer join por customer_id (left).</li>\n        <li>Calcular enviado/pendiente y backlog acumulado.</li>\n        <li>Entregar 3 m√©tricas y documentar el modelo.</li>\n      </ul>\n      <h2>Videos</h2>\n      <ul>\n        <li><a href=\"https://www.youtube.com/watch?v=ammtdbAephY\" target=\"_blank\">GroupBy/Pivot en pandas (conteos)</a></li>\n        <li><a href=\"https://www.youtube.com/watch?v=bFrq6xYo5cI\" target=\"_blank\">GroupBy (ejercicio de conteo)</a></li>\n        <li><a href=\"https://www.atlassian.com/es/agile/scrum/backlogs\" target=\"_blank\">¬øQu√© es backlog? (Atlassian)</a></li>\n      </ul>\n      <h2>Investigaci√≥n ‚Äî Fichas</h2>\n      <p>Completa 3 fichas: join por customer_id (left), conteo condicional, backlog. Para cada ficha incluye: definici√≥n, ejemplo en este proyecto, error com√∫n, fuente vista. Adem√°s, redacta tu plan (6‚Äì8 l√≠neas): join, banderas y m√©tricas.</p>\n      <h2>Pr√°ctica ‚Äî Contrato</h2>\n      <p><strong>Entrada:</strong> (Silver Operaciones): orders_o_clean.csv, customers_o_clean.csv (opcional products_o_clean.csv).</p>\n      <p><strong>Logro:</strong> en <code>data/gold/</code>:</p>\n      <ul>\n        <li><code>envios_por_ciudad.csv</code> (por city: envios, pendientes ‚Äî ordenado por env√≠os desc)</li>\n        <li><code>envios_por_dia.csv</code> (por order_date: envios, pendientes ‚Äî ordenado por fecha)</li>\n        <li><code>backlog_por_dia.csv</code> (acumulado de pendientes)</li>\n        <li><code>o_model.json</code> (fuentes, join, m√©tricas, definiciones)</li>\n      </ul>\n      <h2>Parte aplicada (detallada)</h2>\n      <p><strong>Situaci√≥n:</strong> Operaciones necesita saber d√≥nde reforzar y cu√°ndo se acumula backlog.</p>\n      <p><strong>Qu√© debes hacer:</strong></p>\n      <ul>\n        <li>Comprueba que el join traiga city para todos los pedidos (si no, corrige claves).</li>\n        <li>Define enviado/pendiente como 1/0 seg√∫n shipped; revisa 3‚Äì5 filas para asegurarte.</li>\n        <li>Calcula backlog como acumulado por fecha y verifica la progresi√≥n (no debe ‚Äúbajar‚Äù si no hay env√≠os).</li>\n        <li>Documenta cualquier caso con city vac√≠a y explica c√≥mo lo resolviste.</li>\n      </ul>\n      <p><strong>Criterio de aceptaci√≥n:</strong> m√©tricas ordenadas y acumulado correcto; <code>o_model.json</code> coherente.</p>\n      <h2>Entregables</h2>\n      <p>envios_por_ciudad.csv, envios_por_dia.csv, backlog_por_dia.csv, o_model.json, docs/m6_ops_notes.md.</p>\n      <h2>Verificaci√≥n</h2>\n      <p>Archivos env√≠os por ciudad, env√≠os por d√≠a y backlog existen.</p>\n      <h2>Micro‚Äëquiz (5)</h2>\n      <ol>\n        <li>¬øPor qu√© usar join left al unir pedidos y clientes?</li>\n        <li>¬øC√≥mo defines enviado y pendiente?</li>\n        <li>¬øQu√© es backlog acumulado?</li>\n        <li>¬øC√≥mo se calcula backlog por d√≠a?</li>\n        <li>¬øQu√© hacer si hay ciudades vac√≠as tras el join?</li>\n      </ol>\n      <h2>Checklist</h2>\n      <ul>\n        <li>Videos vistos</li>\n        <li>Fichas completadas</li>\n        <li>Plan redactado</li>\n        <li>Archivos generados</li>\n      </ul>\n      <h2>R√∫brica (10)</h2>\n      <ul>\n        <li>Fichas (3)</li>\n        <li>Pr√°ctica (4)</li>\n        <li>Evidencias (2)</li>\n        <li>Orden (1)</li>\n      </ul>\n      <h2>Errores comunes</h2>\n      <ul>\n        <li>No traer city para algunos pedidos</li>\n        <li>Calcular mal el backlog (disminuir cuando no corresponde)</li>\n        <li>No ordenar por fecha o env√≠os</li>\n      </ul>\n    </section>\n    <section class=\"verification\">\n      <button id=\"verifyBtn\">Verificar y Entregar Misi√≥n</button>\n      <div id=\"verifyResult\"></div>\n    </section>"
  },
  "m7": {
    "title": "M7 ‚Äî Consejo de la Tienda",
    "roles": [
      "Ventas",
      "Operaciones"
    ],
    "verification_type": "evidence",
    "source": {
      "repository": "default",
      "default_branch": "main",
      "base_path": "students/{slug}"
    },
    "deliverables": [
      {
        "type": "file_exists",
        "path": "reports/BlockCorp.pbix",
        "feedback_fail": "No encontr√© tu informe de Power BI (BlockCorp.pbix)."
      }
    ],
    "display_html": "<section class=\"mission\">\n      <h2>Historia</h2>\n      <p>La √∫ltima sala es un auditorio. El Consejo de la Tienda aguarda. ‚ÄúLlegaron hasta aqu√≠ porque supieron preparar su taller, leer cofres, copiar con cuidado, limpiar con criterio y medir con precisi√≥n‚Äù, sonr√≠e Byte.</p>\n      <p>‚ÄúAhora deben contar la historia con claridad. Un buen gr√°fico no grita, aclara. Elijan barras cuando comparen cantidades por categor√≠a; usen l√≠neas cuando la fecha marque el ritmo. Revisen que los n√∫meros del panel coincidan con sus CSV y concluyan con recomendaciones concretas. Lo que no se entiende, no se ejecuta. Hoy ustedes transforman datos en decisiones.‚Äù</p>\n      <h2>¬øPara qu√© sirve?</h2>\n      <p>Comunicar con claridad: convertir m√©tricas en gr√°ficos simples y en un informe con 3 recomendaciones.</p>\n      <h2>Al final podr√°s‚Ä¶</h2>\n      <ul>\n        <li>Importar CSV de Gold en Power BI.</li>\n        <li>Construir 2 visuales legibles por rol.</li>\n        <li>Verificar n√∫meros y redactar un informe breve con 3 acciones.</li>\n      </ul>\n      <h2>Videos</h2>\n      <ul>\n        <li><a href=\"https://www.youtube.com/watch?v=8LU3gjaPtaE\" target=\"_blank\">Conectar Power BI con archivo CSV</a></li>\n        <li><a href=\"https://www.youtube.com/watch?v=LQzh0XG_MZA\" target=\"_blank\">Importar CSV a Power BI Desktop</a></li>\n        <li><a href=\"https://www.youtube.com/watch?v=rNasYMbzPrY\" target=\"_blank\">Gr√°fico de barras: cu√°ndo usar</a></li>\n        <li><a href=\"https://www.youtube.com/watch?v=D70LOsWSsBs\" target=\"_blank\">Gr√°fico de l√≠neas: conceptos b√°sicos</a></li>\n        <li><a href=\"https://www.youtube.com/watch?v=LuOHufhVmEU\" target=\"_blank\">Etiquetas y buenas pr√°cticas</a></li>\n      </ul>\n      <h2>Investigaci√≥n ‚Äî Fichas</h2>\n      <p>Completa 3 fichas: Importar CSV, Barras vs L√≠neas, 3 reglas de presentaci√≥n. Para cada ficha incluye:</p>\n      <ul>\n        <li>Definici√≥n</li>\n        <li>Ejemplo en este proyecto (qu√© gr√°fico usar√°s y por qu√©)</li>\n        <li>Error com√∫n (por ejemplo, ejes mal elegidos)</li>\n        <li>Fuente vista</li>\n      </ul>\n      <h2>Pr√°ctica ‚Äî Contrato</h2>\n      <p><strong>Entrada:</strong> CSV de tu rol en <code>data/gold/</code>.</p>\n      <p><strong>Logro:</strong> 2 visuales m√≠nimos por rol, con t√≠tulos/ejes/etiquetas correctos y validaci√≥n num√©rica contra CSV.</p>\n      <p><strong>Salida:</strong> <code>reports/BlockCorp.pbix</code>.</p>\n      <h2>Parte aplicada (detallada)</h2>\n      <p><strong>Situaci√≥n:</strong> El Consejo tomar√° decisiones a partir de tu informe.</p>\n      <p><strong>Qu√© debes hacer:</strong></p>\n      <ul>\n        <li><strong>Ventas:</strong> Barras por <code>order_date</code> con <code>total_ingreso</code> + l√≠nea con <code>total_items</code>; valida sumas totales con una tarjeta/tabla.</li>\n        <li><strong>Operaciones:</strong> Barras por <code>city</code> con env√≠os + l√≠nea por <code>order_date</code> con env√≠os y pendientes; valida totales contra CSV.</li>\n        <li>Revisa legibilidad: t√≠tulos claros, ejes correctos, etiquetas visibles.</li>\n        <li>Escribe <code>tasks/final_report.md</code> con Bronze (qu√© copiaste) ‚Üí Silver (qu√© limpiaste) ‚Üí Gold (qu√© uniste/mediste) ‚Üí 3 recomendaciones concretas (qu√©, d√≥nde, cu√°ndo).</li>\n      </ul>\n      <p><strong>Criterio de aceptaci√≥n:</strong> visuales consistentes con CSV, informe con 3 acciones accionables.</p>\n      <h2>Entregables</h2>\n      <p>reports/BlockCorp.pbix, docs/m7_notes.md, tasks/final_report.md.</p>\n      <h2>Verificaci√≥n</h2>\n      <p>Archivo BlockCorp.pbix existe.</p>\n      <h2>Micro‚Äëquiz (5)</h2>\n      <ol>\n        <li>¬øC√≥mo importas un CSV en Power BI?</li>\n        <li>¬øCu√°ndo usar un gr√°fico de barras y cu√°ndo uno de l√≠neas?</li>\n        <li>¬øPor qu√© validar cifras con el CSV original?</li>\n        <li>Menciona una regla de presentaci√≥n efectiva.</li>\n        <li>¬øQu√© recomendaciones podr√≠as dar al Consejo?</li>\n      </ol>\n      <h2>Checklist</h2>\n      <ul>\n        <li>Videos vistos</li>\n        <li>Fichas completadas</li>\n        <li>Visuales creados</li>\n        <li>Informe escrito</li>\n      </ul>\n      <h2>R√∫brica (10)</h2>\n      <ul>\n        <li>Fichas (3)</li>\n        <li>Pr√°ctica (4)</li>\n        <li>Evidencias (2)</li>\n        <li>Orden (1)</li>\n      </ul>\n      <h2>Errores comunes</h2>\n      <ul>\n        <li>No validar cifras con el CSV</li>\n        <li>Usar el tipo de gr√°fico incorrecto</li>\n        <li>Etiquetas o ejes confusos</li>\n      </ul>\n    </section>\n    <section class=\"verification\">\n      <button id=\"verifyBtn\">Verificar y Entregar Misi√≥n</button>\n      <div id=\"verifyResult\"></div>\n    </section>"
  }
}
